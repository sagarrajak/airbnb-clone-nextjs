// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  email          String?  @unique
  name           String?  @unique
  emailVerified  String?
  image          String?
  hashedPassword String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @default(now())
  favoriteIds    String[] @db.ObjectId

  accounts     Account[]
  listings     Listings[]
  reservations Reservations[]
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expire_at         Int?
  token_type        String?
  scope             String?
  id_token          String? @db.ObjectId
  session_state     String?
  user              User    @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
}

model Listings {
  id            String         @id @default(auto()) @map("_id") @db.ObjectId
  title         String
  description   String
  imageSrc      String
  createdAt     DateTime       @default(now())
  category      String
  roomCount     Int
  bathroomCount Int
  guestCount    Int
  locationValue String
  userId        String         @db.ObjectId
  price         Int
  user          User           @relation(fields: [userId], references: [id])
  reservations  Reservations[]
}

model Reservations {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  userId     String   @db.ObjectId
  listingId  String   @db.ObjectId
  startDate  DateTime
  endDate    DateTime
  totalPrice Int
  createdAt  DateTime @default(now())
  user       User     @relation(fields: [userId], references: [id])
  listing    Listings @relation(fields: [listingId], references: [id])
}

